<div class="modal fade" id="buy-tickets-modal-eventDate-{{ eventdate.reference }}">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><i class="fas fa-ticket-alt"></i> {{ "Buy tickets"|trans }}</h4>
                <button type="button" class="close" id="closeModalWindow" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <h6 class="b">{{ eventdate.event.name }}</h6>
                <p class="text-sm mb-1 text-muted"><i class="fas fa-clock fa-fw"></i> {{ eventdate.startdate|localizeddate('none', 'none', app.request.locale, date_timezone, date_format) }}</p>
                <p class="text-sm text-muted"><i class="fas fa-map-marker-alt fa-fw"></i>
                    {% if eventdate.venue %}
                        {{ eventdate.venue.name }}: {{ eventdate.venue.stringifyAddress }}
                    {% else %}
                        {{ "Online"|trans }}
                    {% endif %}
                </p>
                <div class="table-responsive">
                    <table class="table table-hover table-condensed mb-0">
                        <tbody>
                            {% for ticket in eventdate.tickets %}
                                {% if ticket.active %}
                                    <tr class="bg-gray">
                                        <td class="border-top-white">
                                            <div>
                                                {{ ticket.name }}
                                                {% if ticket.description %}
                                                    <i class="fas fa-info-circle text-primary ml-2" data-toggle="tooltip" title="{{ ticket.description }}"></i>
                                                {% endif %}
                                                {% set eventTicketInCartSum = app.user.isEventticketInCart(ticket) %}
                                                {% if eventTicketInCartSum %}
                                                    <i class="fas fa-cart-plus ml-2 animated infinite flash text-danger" data-toggle="tooltip" title="{{ "You have added %tickets% ticket(s) to your cart"|trans({"%tickets%": eventTicketInCartSum}) }}"></i>
                                                {% endif %}
                                                {% set validTicketReservationsQuantitySumForUser = ticket.getValidTicketReservationsQuantitySum(app.user) %}
                                                {% if validTicketReservationsQuantitySumForUser %}
                                                    <i class="fas fa-hourglass-half ml-2 animated infinite flash text-danger" data-toggle="tooltip" title="{{ "%tickets% ticket(s) are still reserved for you, please wait until the reservation expires at %expirationDate% in order to purchase more tickets"|trans({"%tickets%": validTicketReservationsQuantitySumForUser, "%expirationDate%":  ticket.getValidTicketReservationExpirationDate(app.user)|localizeddate('none', 'none', app.request.locale, date_timezone, date_format)}) }}"></i>
                                                {% endif %}
                                                {% set paidOrderElementsQuantitySum = ticket.getOrderElementsQuantitySum(1, app.user) %}
                                                {% if paidOrderElementsQuantitySum %}
                                                    <i class="fas fa-ticket-alt ml-2 animated infinite flash text-info" data-toggle="tooltip" title="{{ "You have already bought %tickets% ticket(s)"|trans({"%tickets%": paidOrderElementsQuantitySum}) }}"></i>
                                                {% endif %}
                                            </div>
                                            {% if not ticket.isOnSale %}
                                                <span class="badge badge-{{ ticket.stringifyStatusClass }} mt-1">{{ ticket.stringifyStatus|trans }}</span>
                                            {% endif %}
                                            <div class="clearfix"></div>
                                            <div class="b mt-1">
                                                {{ ticket.free ? "Free"|trans : ((services.getSetting('currency_position') == 'left' ? services.getSetting('currency_symbol') : '') ~ ticket.getSalePrice() ~ (services.getSetting('currency_position') == 'right' ? services.getSetting('currency_symbol') : '')) }}
                                                {% if ticket.promotionalprice and not ticket.free %}
                                                    <del class="price-old">{{ (services.getSetting('currency_position') == 'left' ? services.getSetting('currency_symbol') : '') ~ ticket.getPrice() ~ (services.getSetting('currency_position') == 'right' ? services.getSetting('currency_symbol') : '') }}</del>
                                                {% endif %}
                                            </div>
                                            {% if ticket.salesstartdate %}
                                                <div class="clearfix"></div>
                                                {% if ticket.salesstartdate|date("Y/m/d H:i") > "now"|date("Y/m/d H:i") %}
                                                    <small class="text-danger font-size-10px mt-1">
                                                        {{ "Sales start in"|trans }}
                                                        <span class="countdown" data-count-down-to="{{ ticket.salesstartdate|date('Y/m/d H:i') }}"></span>
                                                    </small>
                                                {% else %}
                                                    <small class="text-success font-size-10px mt-1">
                                                        {{ "Sales started on"|trans }}
                                                        {{ ticket.salesstartdate|localizeddate('none', 'none', app.request.locale, date_timezone, date_format) }}
                                                    </small>
                                                {% endif %}
                                            {% endif %}
                                            {% if ticket.salesenddate and ticket.salesstartdate|date("Y/m/d H:i") <= "now"|date("Y/m/d H:i") %}
                                                <div class="clearfix"></div>
                                                {% if ticket.salesenddate|date("Y/m/d H:i") < "now"|date("Y/m/d H:i") %}
                                                    <small class="text-danger font-size-10px  mt-1">
                                                        {{ "Sales ended on"|trans }}
                                                        <span>{{ ticket.salesenddate|localizeddate('none', 'none', app.request.locale, date_timezone, date_format) }}</span>
                                                    </small>
                                                {% else %}
                                                    <small class="text-danger font-size-10px  mt-1">
                                                        {{ "Sales end in"|trans }}
                                                        <span class="countdown" data-count-down-to="{{ ticket.salesenddate|date('Y/m/d H:i') }}"></span>
                                                    </small>
                                                {% endif %}
                                            {% endif %}
                                        </td>
                                        <td class="border-top-white text-right">
                                            <input type="text" class="form-control touchspin-integer bg-white eventdate-ticket-qte" name="{{ ticket.reference }}" data-min="0" data-max="{{ ticket.getMaxTicketsForSaleCount(app.user) }}" {% if eventTicketInCartSum or validTicketReservationsQuantitySumForUser or (not ticket.isOnSale) %}disabled{% endif %} />
                                            {% if services.getSetting("show_tickets_left_on_cart_modal") == "yes" %}
                                                <span class="badge badge-info mt-2">{{ ticket.getTicketsLeftCount }} {{ "tickets left"|trans }}</span>
                                            {% endif %}
                                            {% if ticket.ticketsperattendee %}
                                                <span class="badge badge-info ml-3 mt-2">{{ ticket.ticketsperattendee }} {{ "tickets per attendee"|trans }}</span>
                                            {% endif %}
                                        </td>
                                    </tr>
                                {% endif %}
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-primary" onClick="up" id="closeModalBtn" data-dismiss="modal"><i class="far fa-window-close"></i> {{ "Close"|trans }}</button>
                {% if not event.hasTwoOrMoreEventDatesOnSale %}
                    <button id="add-to-cart-button" type="button" class="btn btn-primary"><i class="fas fa-cart-plus"></i> {{ "Add to cart"|trans }}</button>
                {% endif %}
            </div>
        </div>
    </div>
</div>
{# <script>

    !function(t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).tracardi=t()}(function(){return function r(o,i,a){function c(e,t){if(!i[e]){if(!o[e]){var n="function"==typeof require&&require;if(!t&&n)return n(e,!0);if(d)return d(e,!0);throw(n=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",n}n=i[e]={exports:{}},o[e][0].call(n.exports,function(t){return c(o[e][1][t]||t)},n,n.exports,r,o,i,a)}return i[e].exports}for(var d="function"==typeof require&&require,t=0;t<a.length;t++)c(a[t]);return c}({1:[function(t,e,n){"use strict";!function(t){t=t||window;var n=[],r=!1,o=!1;function i(){if(!r){r=!0;for(var t=0;t<n.length;t++)n[t].fn.call(window,n[t].ctx);n=[]}}function a(){"complete"===document.readyState&&i()}t.documentReady=function(t,e){if("function"!=typeof t)throw new TypeError("callback for documentReady(fn) must be a function");r?setTimeout(function(){t(e)},1):(n.push({fn:t,ctx:e}),"complete"===document.readyState||!document.attachEvent&&"interactive"===document.readyState?setTimeout(i,1):o||(document.addEventListener?(document.addEventListener("DOMContentLoaded",i,!1),window.addEventListener("load",i,!1)):(document.attachEvent("onreadystatechange",a),window.attachEvent("onload",i)),o=!0))}}(window);var r=[];window.tracker||(window.tracker={}),window.response||(window.response={context:{}}),window.onTracardiReady={bind:function(t){"function"==typeof t&&r.push(t)},call:function(e){r.forEach(function(t){t(e)})}},function(){for(var n=[],r="liliput.min.js",t=["track"],e=0;e<t.length;e++){var o=t[e];window.tracker[o]=function(e){return function(){var t=Array.prototype.slice.call(arguments);return t.unshift(e),n.push(t),window.tracker}}(o)}function i(){if(console.debug("[Loader] Rerun callbacks."),void 0!==window.tracardi.default)if(window.tracardi.default.getState().plugins.tracardi.initialized)for(window.tracker=window.tracardi.default;0<n.length;){var t=n.shift(),e=t.shift();tracker[e]&&tracker[e].apply(tracker,t)}else console.error("[Loader] Callbacks stopped. Tracker not initialized.");else console.error("[Loader] Callbacks stopped. Tracker not initialized. Is script url correct?")}documentReady(function(){var t,e,n;"1"!==navigator.doNotTrack||!0!==(null===(t=options)||void 0===t||null===(e=t.tracker)||void 0===e||null===(n=e.settings)||void 0===n?void 0:n.respectDoNotTrack)?((e=document.createElement("script")).type="text/javascript",e.async=!0,void 0!==options.tracker||void 0!==options.tracker.url||void 0!==options.tracker.url.script?(null!==options.tracker.url.script?options.tracker.url.script.startsWith("http")||options.tracker.url.script.startsWith("//")?e.src=options.tracker.url.script+"/"+r:e.src=options.tracker.url.script:e.src=r,console.debug("[Loader] Loading: "+e.src),e.addEventListener?e.addEventListener("load",function(t){i()},!1):e.onreadystatechange=function(){"complete"!==this.readyState&&"loaded"!==this.readyState||i(window.event)},(n=document.getElementsByTagName("script")[0]).parentNode.insertBefore(e,n)):console.error("[Loader] Undefined options.tracker.url.script. This url defines location of tracker code.")):console.log("We are respecting do not track setting. Tracardi disabled.")})}()},{}]},{},[1])(1)});

    var options = {
        tracker: {
            url: {
                // This is url to tracardi backend. Please mind the correct port.
                script: 'https://stg-bdp-api.keos.co/tracker',
                api: 'https://stg-bdp-api.keos.co'
            },
            source: {
                id: "0bfb6914-bd7a-4d46-a41a-8592e9ef3520"
            }
            // Please see the documentation for more settings: http://docs.tracardi.com/integration/js-integration/
        }
    }

</script> #}
<script>

    document.addEventListener('DOMContentLoaded', function() {
        var modalCloseButton = document.getElementById('closeModalWindow');
        var closeModalBtn = document.getElementById('closeModalBtn');
        modalCloseButton.addEventListener('click', function() {
            closeModalTrack();  
        });
        modalCloseButton.addEventListener('click', function() {
        closeModalTrack();
    //!function(t){"object"==closeModalTrackpeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).tracardi=t()}(function(){return function r(o,i,a){function c(e,t){if(!i[e]){if(!o[e]){var n="function"==typeof require&&require;if(!t&&n)return n(e,!0);if(d)return d(e,!0);throw(n=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",n}n=i[e]={exports:{}},o[e][0].call(n.exports,function(t){return c(o[e][1][t]||t)},n,n.exports,r,o,i,a)}return i[e].exports}for(var d="function"==typeof require&&require,t=0;t<a.length;t++)c(a[t]);return c}({1:[function(t,e,n){"use strict";!function(t){t=t||window;var n=[],r=!1,o=!1;function i(){if(!r){r=!0;for(var t=0;t<n.length;t++)n[t].fn.call(window,n[t].ctx);n=[]}}function a(){"complete"===document.readyState&&i()}t.documentReady=function(t,e){if("function"!=typeof t)throw new TypeError("callback for documentReady(fn) must be a function");r?setTimeout(function(){t(e)},1):(n.push({fn:t,ctx:e}),"complete"===document.readyState||!document.attachEvent&&"interactive"===document.readyState?setTimeout(i,1):o||(document.addEventListener?(document.addEventListener("DOMContentLoaded",i,!1),window.addEventListener("load",i,!1)):(document.attachEvent("onreadystatechange",a),window.attachEvent("onload",i)),o=!0))}}(window);var r=[];window.tracker||(window.tracker={}),window.response||(window.response={context:{}}),window.onTracardiReady={bind:function(t){"function"==typeof t&&r.push(t)},call:function(e){r.forEach(function(t){t(e)})}},function(){for(var n=[],r="liliput.min.js",t=["track"],e=0;e<t.length;e++){var o=t[e];window.tracker[o]=function(e){return function(){var t=Array.prototype.slice.call(arguments);return t.unshift(e),n.push(t),window.tracker}}(o)}function i(){if(console.debug("[Loader] Rerun callbacks."),void 0!==window.tracardi.default)if(window.tracardi.default.getState().plugins.tracardi.initialized)for(window.tracker=window.tracardi.default;0<n.length;){var t=n.shift(),e=t.shift();tracker[e]&&tracker[e].apply(tracker,t)}else console.error("[Loader] Callbacks stopped. Tracker not initialized.");else console.error("[Loader] Callbacks stopped. Tracker not initialized. Is script url correct?")}documentReady(function(){var t,e,n;"1"!==navigator.doNotTrack||!0!==(null===(t=options)||void 0===t||null===(e=t.tracker)||void 0===e||null===(n=e.settings)||void 0===n?void 0:n.respectDoNotTrack)?((e=document.createElement("script")).type="text/javascript",e.async=!0,void 0!==options.tracker||void 0!==options.tracker.url||void 0!==options.tracker.url.script?(null!==options.tracker.url.script?options.tracker.url.script.startsWith("http")||options.tracker.url.script.startsWith("//")?e.src=options.tracker.url.script+"/"+r:e.src=options.tracker.url.script:e.src=r,console.debug("[Loader] Loading: "+e.src),e.addEventListener?e.addEventListener("load",function(t){i()},!1):e.onreadystatechange=function(){"complete"!==this.readyState&&"loaded"!==this.readyState||i(window.event)},(n=document.getElementsByTagName("script")[0]).parentNode.insertBefore(e,n)):console.error("[Loader] Undefined options.tracker.url.script. This url defines location of tracker code.")):console.log("We are respecting do not track setting. Tracardi disabled.")})}()},{}]},{},[1])(1)});
//
    //var options = {
    //    tracker: {
    //        url: {
    //            // This is url to tracardi backend. Please mind the correct port.
    //            script: 'https://stg-bdp-api.keos.co/tracker',
    //            api: 'https://stg-bdp-api.keos.co'
    //        },
    //        source: {
    //            id: "0bfb6914-bd7a-4d46-a41a-8592e9ef3520"
    //        }
    //        // Please see the documentation for more settings: http://docs.tracardi.com/integration/js-integration/
    //    }
    //}
    //        if(window.tracker){
    //            window.tracker.track('Close the ticket purchase window', {
    //                Type: 'Click',
    //                Action: 'Attendee',
    //            });
    //        } else {
    //            console.error('Tracker not initialized');
    //        }
        });

        async function closeModalTrack(){
              try {
            // Load the external JS file
            await fetch('{{ asset("assets/ll_assets/assets/js/tracardi.js") }}')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(scriptContent => {
                    const scriptElement = document.createElement('script');
                    scriptElement.text = scriptContent;
                    document.body.appendChild(scriptElement);
                });

            // Track the event
            await new Promise((resolve, reject) => {
                try {
                   window.tracker.track('Close the ticket purchase window', {
                        Type: 'Click',
                        Action: 'Attendee',
                    });
                    resolve();
                } catch (error) {
                    reject(error);
                }
            });

        } catch (error) {
            console.error('Error:', error);
            console.error('An error occurred.');
        }
        }
    });
</script>
